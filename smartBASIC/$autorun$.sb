
//******************************************************************
//MarAlert(c) 2018
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//+++++
//+++++ When UwTerminal downloads the app it will store it as a filename 
//+++++ which consists of all characters up to the first .
//+++++
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
//
// ButtonPushBlinky.sb
// Tests the functionality of button 0, button 1, LED 0 and LED 1 on the development board
// DVK-RM191-SM-02
//
// 3/30/2018 - Initial Version
// 


//******************************************************************
//Definitions
//******************************************************************




//******************************************************************
//Library Imports
//******************************************************************
//#include "$.lib.ble.sb"




//******************************************************************
//Global Variable Declarations
//******************************************************************

dim rc 					//declare rc as integer




//******************************************************************
//Function and Subroutine Definitions
//******************************************************************




//==================================================================
//button2release()
//==================================================================
function button2release()		
	gpiowrite(5,0)								//turn LED 0 off
	print "Button 2 has been released \n"
	print "LED 2 should now go out \n\n"
endfunc 1

//==================================================================
// button2press()
//==================================================================
function button2press()
	gpiowrite(5,1)								//turn LED 0 on
	print "Button 2 has been pressed \n"
	print "LED 2 will light while the button is pressed"
endfunc 1

//==================================================================
//button1release()
//==================================================================
function button1release()		
	gpiowrite(19,0)								//turn LED 1 off
	print "Button 1 has been released \n"
	print "LED 1 should now go out \n\n"
endfunc 1

//==================================================================
//button1press()
//==================================================================
function button1press()
	gpiowrite(19,1)								//turn LED 1 on
	print "Button 1 has been pressed \n"
	print "LED 1 will light while the button is pressed"
endfunc 1

//==================================================================

//******************************************************************
//Handler Definitions
//******************************************************************



//******************************************************************
//main() Equivalent
//******************************************************************

rc = gpiosetfunc(5,1,2)		//sets sio5 (Button 2) as a digital in with a weak pull up resistor
//rc = gpiosetfunc(17,1,2)	//sets sio17 (Button 1) as a digital in with a weak pull up resistor

rc = gpiosetfunc(6,2,0) 	//sets sio18 (LED0) as a digital out
//rc = gpiosetfunc(19,2,0) 	//sets sio19 (LED1) as a digital out

rc = gpiobindevent(0,16,0) //binds a gpio transition high to an event. sio5 (button 2)
rc = gpiobindevent(1,16,1) //binds a gpio transition low to an event. sio5 (button 2)
//rc = gpiobindevent(2,17,0) //binds a gpio transition high to an event. sio17 (button 1)
//rc = gpiobindevent(3,17,1) //binds a gpio transition low to an event. sio17 (button 1)

onevent evgpiochan0 call button2release //detects when button 0 is released and calls the function
onevent evgpiochan1 call button2press //detects when button 0 is pressed and calls the function
//onevent evgpiochan2 call button1release //detects when button 1 is released and calls the function
//onevent evgpiochan3 call button1press //detects when button 1 is pressed and calls the function

print "Ready to begin button and LED test\n"	//these lines are printed to the UART when the program is run
print "Please press button 0 or button 1 \n\n"

//-----------------------------------------------------------------
// Wait for a synchronous event
// An application can have multiple <WaitEvent> statements
//-----------------------------------------------------------------

waitevent //when program is run it waits here until an event is detected